---
# tasks file for pk_bounca

- name: Print server hostnames to be used
  ansible.builtin.debug:
    msg: "{{ server_names }}"
    verbosity: 0

- name: Install BounCA Dependencies
  ansible.builtin.apt:
    name:
      - gettext
      - nginx
      - python3
      - python3-dev
      - python3-setuptools
      - python-is-python3
      - uwsgi
      - uwsgi-plugin-python3
      - virtualenv
      - python3-virtualenv
      - python3-pip
      - postgresql
      - postgresql-contrib
      - python3-psycopg2      # Needed for postgres modules
      - acl                   # Needed for become_user: postgres
    state: present
    update_cache: true

- name: Make random database password and MD5 it
  set_fact:
    bounca_dbpassword: "{{ lookup('community.general.random_string', length=24, special=false) | hash('md5')  }}"

- name: Create Postgres user
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ bounca_dbuser }}"
    password: "{{ bounca_dbpassword }}"
    role_attr_flags: CREATEDB

- name: Create Postgres DB and grant to user
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ bounca_db }}"
    owner: "{{ bounca_dbuser }}"
    template: "template0"
    encoding: "UTF8"

- name: Create Logging Directory for BounCA
  ansible.builtin.file:
    path: /var/log/bounca
    state: directory
    mode: '0755'
    owner: www-data
    group: www-data

- name: Create Settings Directory for BounCA
  ansible.builtin.file:
    path: /etc/bounca
    state: directory
    mode: '0755'

- name: Get BounCA Release
  ansible.builtin.get_url:
    url: "{{ bounca_release }}"
    dest: "/tmp/bounca.tar.gz"
    force: "yes"

- name: Unzip BounCA Archive
  ansible.builtin.unarchive:
    src: "/tmp/bounca.tar.gz"
    dest: '/var/www'
    remote_src: true

- name: Chown /var/www/bounca directory
  ansible.builtin.file:
    path: /var/www/bounca
    state: directory
    recurse: true
    owner: 'www-data'
    group: 'www-data'

- name: Template out nginx sites-enabled
  ansible.builtin.template:
    src: default.j2
    dest: /etc/nginx/sites-enabled/default
    force: true
    mode: '0770'

- name: Template out uwsgi apps-available
  ansible.builtin.template:
    src: bounca.ini.j2
    dest: /etc/uwsgi/apps-enabled/bounca.ini
    force: true
    mode: '0770'

- name: Make random string for Django
  set_fact:
    django_key: "{{ lookup('community.general.random_string', length=24, special=false) }}"

- name: Template out BounCA services file
  ansible.builtin.template:
    src: services.yaml.j2
    dest: /etc/bounca/services.yaml
    force: true
    mode: '0770'

- name: Install Pip Requirements
  ansible.builtin.pip:
    requirements: "./requirements.txt"
    chdir: "/var/www/bounca"
    virtualenv: "env"

- name: Django Migrate
  community.general.django_manage:
    command: "migrate"
    project_path: "/var/www/bounca"
    virtualenv: "env"

- name: Chown Bounca Log again (to fix migrate problem)
  ansible.builtin.file:
    path: /var/log/bounca/bounca.log
    owner: 'www-data'
    group: 'www-data'

- name: Django collectstatic
  community.general.django_manage:
    command: "collectstatic"
    project_path: "/var/www/bounca"
    virtualenv: "env"

- name: Django start site
  community.general.django_manage:
    command: "site {{ server_names | first }}"
    project_path: "/var/www/bounca"
    virtualenv: "env"

- name: Ensure uwsgi is restarted
  ansible.builtin.service:
    name: uwsgi
    state: restarted
    enabled: true

- name: Ensure nginx is restarted
  ansible.builtin.service:
    name: nginx
    state: restarted
    enabled: true
